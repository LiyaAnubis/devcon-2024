
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресЛичногоКабинета = Константы.ЛКК_АдресЛичногоКабинета.Получить();
	ВидЦены = Константы.ЛКК_ВидЦены.Получить();
	
	Логин = Константы.ЛКК_ИдентификаторСлужебногоПользователя.Получить();
	Если ЗначениеЗаполнено(Логин) Тогда
		ИдентификаторСлужебногоПользователя = Новый УникальныйИдентификатор();
	КонецЕсли;
	
	Пароль = Константы.ЛКК_СекретСлужебногоПользователя.Получить();
	Если ЗначениеЗаполнено(Пароль) Тогда
		СекретСлужебногоПользователя = Новый УникальныйИдентификатор();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АдресЛичногоКабинетаПриИзменении(Элемент)
	УстановитьАдресЛичногоКабинета(АдресЛичногоКабинета)
КонецПроцедуры

&НаКлиенте
Процедура ИдентификаторСлужебногоПользователяПриИзменении(Элемент)
	УстановитьИдентификаторСлужебногоПользователя(ИдентификаторСлужебногоПользователя);
КонецПроцедуры

&НаКлиенте
Процедура СекретСлужебногоПользователяПриИзменении(Элемент)
	УстановитьСекретСлужебногоПользователя(СекретСлужебногоПользователя);
КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныПриИзменении(Элемент)
	УстановитьВидЦены(ВидЦены);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКонтрагенты

&НаКлиенте
Процедура КонтрагентыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ДобавитьКонтрагентаВЛичныйКабинет(ВыбранноеЗначение);
	
	Элемент.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПриАктивизацииСтроки(Элемент)
	
	ДанныеКонтрагента = Элементы.Контрагенты.ТекущиеДанные;
	
	Если ДанныеКонтрагента = Неопределено Тогда
		Контрагент = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка")
	Иначе
		Контрагент = ДанныеКонтрагента.Контрагент;		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Пользователи, "Контрагент", Контрагент);

КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПользователи

&НаКлиенте
Процедура ПользователиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ДанныеКонтрагента = Элементы.Контрагенты.ТекущиеДанные;
	
	Если ДанныеКонтрагента = Неопределено Тогда
		ПредупреждениеАсинх("Необходимо выбрать контрагента");
		Возврат;
	КонецЕсли;
	
	ДобавитьПредставителяВЛичныйКабинет(ДанныеКонтрагента.Контрагент, ВыбранноеЗначение);
	
	Элемент.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыНоменклатура

&НаКлиенте
Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ОтправитьВыбраннуюНоменклатуру(ВыбранноеЗначение);
	
	Элемент.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьПодключение(Команда)
	ПредупреждениеАсинх(ПроверитьПодключениеСервер());
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКонтрагента(Команда)
	
	ОткрытьФорму("Обработка.ЛКК_НастройкиОбмена.Форма.ВыборКлиента",, Элементы.Контрагенты);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПредставителя(Команда)
	
	ДанныеКонтрагента = Элементы.Контрагенты.ТекущиеДанные;
	
	Если ДанныеКонтрагента = Неопределено Тогда
		ПредупреждениеАсинх("Необходимо выбрать контрагента");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Контрагент", ДанныеКонтрагента.Контрагент);
	
	ОткрытьФорму("Обработка.ЛКК_НастройкиОбмена.Форма.ВыборПредставителя", ПараметрыФормы, Элементы.Пользователи);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНоменклатуру(Команда)
	
	Если Не ЗначениеЗаполнено(ВидЦены) Тогда
		ПредупреждениеАсинх("Необходимо заполнить вид цены");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("МножественныйВыбор", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	ОткрытьФорму("Справочник.Номенклатура.ФормаВыбора", ПараметрыФормы, Элементы.Номенклатура,,,,,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПовторноНоменклатуру(Команда)
	ВыгрузитьПовторноНоменклатуруСервер();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	ВыполнитьОбменНаСервере();
	
	Элементы.Заказы.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УстановитьАдресЛичногоКабинета(Адрес)
	Константы.ЛКК_АдресЛичногоКабинета.Установить(Адрес);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьИдентификаторСлужебногоПользователя(ИдентификаторСлужебногоПользователя)
	Константы.ЛКК_ИдентификаторСлужебногоПользователя.Установить(ИдентификаторСлужебногоПользователя)
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСекретСлужебногоПользователя(СекретСлужебногоПользователя)
	Константы.ЛКК_СекретСлужебногоПользователя.Установить(СекретСлужебногоПользователя)
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьВидЦены(ВидЦены)
	Константы.ЛКК_ВидЦены.Установить(ВидЦены);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыгрузитьПовторноНоменклатуруСервер()
	
	ЛКК_ОбменСЛичнымКабинетом.ВыгрузитьПовторноНоменклатуру();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтправитьВыбраннуюНоменклатуру(СписокНоменклатуры)
	
	ЛКК_ОбменСЛичнымКабинетом.ОтправитьВыбраннуюНоменклатуру(СписокНоменклатуры);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьКонтрагентаВЛичныйКабинет(Контрагент)
	
	ЛКК_ОбменСЛичнымКабинетом.ДобавитьКонтрагентаВЛичныйКабинет(Контрагент);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьПредставителяВЛичныйКабинет(Контрагент, НастройкиСоздания)
	
	ЛКК_ОбменСЛичнымКабинетом.ДобавитьПредставителяВЛичныйКабинет(Контрагент, НастройкиСоздания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПодключениеСервер()
	
	Возврат ЛКК_ОбменСЛичнымКабинетом.ПроверитьПодключение()
	
КонецФункции

&НаСервере
Процедура ВыполнитьОбменНаСервере()
	
	НастройкиОбмена = ЛКК_ОбменСЛичнымКабинетом.НовыеНастройкиОбмена();
	Результат = ЛКК_ОбменСЛичнымКабинетом.ВыполнитьОбмен(НастройкиОбмена);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
	
	Если Не Результат.Успех Тогда
		ОбщегоНазначения.СообщитьПользователю(Результат.ТекстОшибки);
		ВходящееСообщение = Результат.ПодробныйТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


